{"version":3,"file":"static/js/330.42daef61.chunk.js","mappings":"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","sources":["redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","webpack://health-monitor/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","webpack://health-monitor/./src/components/Calculator/Calculator.module.css?7770","components/Calculator/Calculator.jsx","Utils/getFormattedDate.js","webpack://health-monitor/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","webpack://health-monitor/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\n// Basic selector to get the slice of state\r\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\r\n\r\n// Memoized selector for formData\r\nexport const selectFormData = createSelector(\r\n  [selectPublicCalculatorState],\r\n  (publicCalculatorSlice) => ({\r\n    height: publicCalculatorSlice.height,\r\n    age: publicCalculatorSlice.age,\r\n    currentWeight: publicCalculatorSlice.currentWeight,\r\n    desiredWeight: publicCalculatorSlice.desiredWeight,\r\n    bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\r\n  })\r\n);\r\n\r\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\r\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\r\nexport const selectError = (state) => state.publicCalculatorSlice.error;\r\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\r\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectError,\r\n  selectFormData,\r\n  selectLoading,\r\n  selectResult,\r\n  selectProducts,\r\n  selectProduct,\r\n} from \"../redux/public/selectorsPublic\";\r\n\r\nexport const usePublic = () => {\r\n  const dispatch = useDispatch(); // Add dispatch for triggering actions\r\n  const formData = useSelector(selectFormData);\r\n  const isLoading = useSelector(selectLoading);\r\n  const errorPublic = useSelector(selectError);\r\n  const result = useSelector(selectResult);\r\n  const products = useSelector(selectProducts);\r\n  const product = useSelector(selectProduct);\r\n\r\n  return {\r\n    formData,\r\n    isLoading,\r\n    errorPublic,\r\n    result,\r\n    products,\r\n    product,\r\n    dispatch, // Include dispatch in the returned object\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__wOEyk\",\"input\":\"Input_input__XbaoR\",\"inputCenter\":\"Input_inputCenter__xDESs\",\"inputInfo\":\"Input_inputInfo__zGyqR\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  min = 0,\r\n  step,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        step={step}\r\n        min={min}\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  min: PropTypes.number,\r\n  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__2Ao6j\",\"formMainCont\":\"WeightLossForm_formMainCont__rHGyT\",\"formLeftCont\":\"WeightLossForm_formLeftCont__oyuUh\",\"formRightCont\":\"WeightLossForm_formRightCont__sCqUt\",\"inputWrapper\":\"WeightLossForm_inputWrapper__JGV3L\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__9LJjf\",\"label\":\"WeightLossForm_label__2sThV\",\"radioGroup\":\"WeightLossForm_radioGroup__uHmu5\",\"radioInput\":\"WeightLossForm_radioInput__EGGV3\",\"radioLabel\":\"WeightLossForm_radioLabel__rPw6a\",\"errorMessage\":\"WeightLossForm_errorMessage__6+Zrx\",\"link\":\"WeightLossForm_link__YYLD-\"};","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\r\nimport { usePublic } from \"../../hooks/usePublic\";\r\n\r\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\r\nimport { usePrivate } from \"../../hooks/usePrivate\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport styles from \"./WeightLossForm.module.css\";\r\n\r\nconst bloodTypeOptions = [\r\n  { value: \"1\", label: \"A\" },\r\n  { value: \"2\", label: \"B\" },\r\n  { value: \"3\", label: \"AB\" },\r\n  { value: \"4\", label: \"O\" },\r\n];\r\n\r\nexport default function WeightLossForm({ onSubmit }) {\r\n  const { formData = {}, isLoading, dispatch } = usePublic();\r\n\r\n  const { isLoggedIn } = useAuth();\r\n  const { user } = usePrivate();\r\n  // console.log(\"userWeightForm :\", user);\r\n\r\n  const userHeight = user?.height;\r\n  const userAge = user?.age;\r\n  const userWeight = user?.weight;\r\n  const userDesiredWeight = user?.desiredWeight;\r\n  const userBloodType = user?.bloodType;\r\n  // console.log(userBloodType);\r\n\r\n  const {\r\n    privateFormData = {},\r\n    privateLoading,\r\n    privateDispatch,\r\n  } = usePrivate();\r\n  // console.log(isLoggedIn);\r\n  // console.log(privateLoading);\r\n  // console.log(\"privateFormData :\", privateFormData);\r\n\r\n  // Initialize form state with default values\r\n  useEffect(() => {\r\n    const defaultValues = {\r\n      height: isLoggedIn ? userHeight : \"\",\r\n      age: isLoggedIn ? userAge : \"\",\r\n      currentWeight: isLoggedIn ? userWeight : \"\",\r\n      desiredWeight: isLoggedIn ? userDesiredWeight : \"\",\r\n      bloodGroupIndex: isLoggedIn ? userBloodType : \"\",\r\n    };\r\n\r\n    const setter = isLoggedIn ? privateDispatch : dispatch;\r\n    const setAction = isLoggedIn ? setPrivateFormData : setFormData;\r\n\r\n    Object.entries(defaultValues).forEach(([key, value]) => {\r\n      if (!isLoggedIn && !formData[key]) {\r\n        setter(setAction({ name: key, value }));\r\n      }\r\n      if (isLoggedIn && !privateFormData[key]) {\r\n        setter(setAction({ name: key, value }));\r\n      }\r\n    });\r\n  }, [\r\n    dispatch,\r\n    privateDispatch,\r\n    formData,\r\n    privateFormData,\r\n    isLoggedIn,\r\n    userHeight,\r\n    userAge,\r\n    userWeight,\r\n    userDesiredWeight,\r\n    userBloodType,\r\n  ]);\r\n\r\n  // console.log(\"formDataWeightForm :\", privateFormData);\r\n\r\n  // Check if all form fields are valid\r\n  const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\r\n    (field) => field?.toString().trim() !== \"\"\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    !isLoggedIn\r\n      ? dispatch(setFormData({ name, value }))\r\n      : privateDispatch(setPrivateFormData({ name, value }));\r\n  };\r\n\r\n  const handleRadioChange = (value) => {\r\n    !isLoggedIn\r\n      ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\r\n      : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const dataToSubmit = isLoggedIn ? privateFormData : formData;\r\n    if (isValid) {\r\n      onSubmit(dataToSubmit);\r\n    }\r\n  };\r\n\r\n  const height = !isLoggedIn ? formData.height : privateFormData.height;\r\n  const age = !isLoggedIn ? formData.age : privateFormData.age;\r\n  const currentWeight = !isLoggedIn\r\n    ? formData.currentWeight\r\n    : privateFormData.currentWeight;\r\n  const desiredWeight = !isLoggedIn\r\n    ? formData.desiredWeight\r\n    : privateFormData.desiredWeight;\r\n  const bloodGroupIndex = !isLoggedIn\r\n    ? formData?.bloodGroupIndex\r\n    : privateFormData?.bloodGroupIndex;\r\n  const loading = !isLoggedIn ? isLoading : privateLoading;\r\n\r\n  // console.log(\"height\", height);\r\n  // console.log(\"age\", age);\r\n  // console.log(\"currentWeight\", currentWeight);\r\n  // console.log(\"desiredWeight\", desiredWeight);\r\n  // console.log(\"bloodGroupIndex\", bloodGroupIndex);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <div className={styles.formMainCont}>\r\n        {/* Left Section */}\r\n        <div className={styles.formLeftCont}>\r\n          <div className={styles.inputWrapper}>\r\n            <Input\r\n              step={1}\r\n              type=\"number\"\r\n              placeholder=\"Height*/cm\"\r\n              name=\"height\"\r\n              value={height > 0 ? height : \"\"}\r\n              handleChange={handleChange}\r\n              required\r\n            />\r\n            {height > 0 && <span>Height*/cm</span>}\r\n          </div>\r\n\r\n          <div className={styles.inputWrapper}>\r\n            <Input\r\n              step={1}\r\n              type=\"number\"\r\n              placeholder=\"Age*/years\"\r\n              name=\"age\"\r\n              value={age > 0 ? age : \"\"}\r\n              handleChange={handleChange}\r\n              required\r\n            />\r\n            {age > 0 && <span>Age*/years</span>}\r\n          </div>\r\n\r\n          <div className={styles.inputWrapper}>\r\n            <Input\r\n              step=\"any\"\r\n              type=\"number\"\r\n              placeholder=\"Current weight*/kg\"\r\n              name=\"currentWeight\"\r\n              value={currentWeight > 0 ? currentWeight : \"\"}\r\n              handleChange={handleChange}\r\n              required\r\n            />\r\n            {currentWeight > 0 && <span>Current weight*/kg</span>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Section */}\r\n        <div className={styles.formRightCont}>\r\n          <div className={styles.inputWrapper}>\r\n            <Input\r\n              step=\"any\"\r\n              type=\"number\"\r\n              placeholder=\"Desired weight*/kg\"\r\n              name=\"desiredWeight\"\r\n              value={desiredWeight > 0 ? desiredWeight : \"\"}\r\n              handleChange={handleChange}\r\n              required\r\n            />\r\n            {desiredWeight > 0 && <span>Desired weight*/kg</span>}\r\n          </div>\r\n\r\n          <div className={styles.bloodTypeContainer}>\r\n            <label className={styles.label}></label>\r\n\r\n            {/* Read-Only Input */}\r\n            <div className={styles.inputWrapper}>\r\n              <Input\r\n                type=\"text\"\r\n                // placeholder=\"Blood type*\"\r\n                name=\"bloodType\"\r\n                value={\r\n                  bloodTypeOptions.find(\r\n                    (opt) => opt.value === String(bloodGroupIndex)\r\n                  )?.label || \"\"\r\n                }\r\n                handleChange={handleChange}\r\n                required\r\n                readOnly\r\n              />\r\n              <span>Blood type*</span>\r\n            </div>\r\n\r\n            {/* Radio Buttons */}\r\n            <div className={styles.radioGroup}>\r\n              {bloodTypeOptions.map((option) => (\r\n                <React.Fragment key={option.value}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`bloodType-${option.value}`}\r\n                    name=\"bloodType\"\r\n                    value={option.value}\r\n                    checked={String(bloodGroupIndex) === option.value}\r\n                    onChange={() => handleRadioChange(option.value)}\r\n                    className={styles.radioInput}\r\n                  />\r\n                  <label\r\n                    htmlFor={`bloodType-${option.value}`}\r\n                    className={styles.radioLabel}\r\n                  >\r\n                    {option.label}\r\n                  </label>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Button type=\"submit\" variant=\"colored\" disabled={!isValid || loading}>\r\n        {loading\r\n          ? \"Loading...\"\r\n          : isLoggedIn\r\n          ? \"Submit Info\"\r\n          : \"Start losing weight\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nWeightLossForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__Fgyrp\",\"title\":\"Calculator_title__2qNjF\",\"warn\":\"Calculator_warn__SI+-0\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\r\n\r\nimport styles from \"./Calculator.module.css\";\r\n\r\nexport default function Calculator({ onSubmit }) {\r\n  const { isLoggedIn } = useAuth();\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <h2 className={styles.title}>\r\n        {isLoggedIn\r\n          ? \"First, enter your personal data to unlock full functionality and calculate your daily calorie needs.\"\r\n          : \"Calculate your daily calorie intake right now\"}\r\n      </h2>\r\n      <p className={styles.warn}>\r\n        Please fill <b>All</b> fields*\r\n      </p>\r\n\r\n      <WeightLossForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCalculator.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","export default function getFormattedDate() {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = String(today.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(today.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__Vt4lV\",\"statisticCont\":\"LoginStatistics_statisticCont__phv4g\",\"resultsToday\":\"LoginStatistics_resultsToday__MzgPS\",\"statisticList\":\"LoginStatistics_statisticList__IVeY-\",\"statisticListItem\":\"LoginStatistics_statisticListItem__88+qJ\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__EqB4e\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__6X8Iy\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__5uxxS\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__VB0oQ\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__gmso7\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__1i+lh\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__lQM8L\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport UpdateUser from \"../UpdateUser\";\r\nimport UserLogout from \"../UserLogout/UserLogout\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { usePrivate } from \"../../hooks/usePrivate\";\r\n\r\nimport styles from \"./LoginStatistics.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nfunction LoginStatistics({ day }) {\r\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n  const { user } = useAuth();\r\n  const { dailyCalorieSummary } = usePrivate();\r\n\r\n  const [userUpdateShown, setUserUpdateShown] = useState(false);\r\n\r\n  // Validate the format dd-mm-yyyy\r\n  const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\r\n  if (!isValidDate) {\r\n    console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\r\n  }\r\n\r\n  const handleUpdateUser = () => {\r\n    setUserUpdateShown(true);\r\n    console.log(\"click !!!\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.resultsCont}>\r\n      {userUpdateShown && (\r\n        <UpdateUser theme={\"light\"} onClose={() => setUserUpdateShown(false)} />\r\n      )}\r\n      {isDesktop && <UserLogout handleUpdateUserClick={handleUpdateUser} />}\r\n      <div className={styles.statisticSuperCont}>\r\n        <div className={styles.statisticCont}>\r\n          <p className={styles.resultsToday}>Summary for {day}</p>\r\n          <ul className={styles.statisticList}>\r\n            <li key=\"left\" className={styles.statisticListItem}>\r\n              <span className={styles.statisticListItemSpan}>Left</span>\r\n              <span className={styles.statisticListItemSpan}>\r\n                {dailyCalorieSummary?.remainingCalories !== 0\r\n                  ? dailyCalorieSummary.remainingCalories\r\n                  : \"000\"}{\" \"}\r\n                kcal\r\n              </span>\r\n            </li>\r\n            <li key=\"consumed\" className={styles.statisticListItem}>\r\n              <span className={styles.statisticListItemSpan}>Consumed</span>\r\n              <span className={styles.statisticListItemSpan}>\r\n                {dailyCalorieSummary?.totalCaloriesConsumed > 0\r\n                  ? dailyCalorieSummary.totalCaloriesConsumed\r\n                  : \"000\"}{\" \"}\r\n                kcal\r\n              </span>\r\n            </li>\r\n            <li key=\"daily\" className={styles.statisticListItem}>\r\n              <span className={styles.statisticListItemSpan}>Daily rate</span>\r\n              <span className={styles.statisticListItemSpan}>\r\n                {dailyCalorieSummary?.dailyCalorieIntake > 0\r\n                  ? dailyCalorieSummary.dailyCalorieIntake\r\n                  : \"000\"}{\" \"}\r\n                kcal\r\n              </span>{\" \"}\r\n            </li>\r\n            <li key=\"normal\" className={styles.statisticListItem}>\r\n              <span className={styles.statisticListItemSpan}>n% of normal</span>\r\n              <span\r\n                style={{ marginBottom: \"4px\" }}\r\n                className={styles.statisticListItemSpan}\r\n              >\r\n                {dailyCalorieSummary?.percentageCaloriesConsumed > 0\r\n                  ? dailyCalorieSummary.percentageCaloriesConsumed\r\n                  : \"0\"}{\" \"}\r\n                %\r\n              </span>{\" \"}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className={styles.notRecommendedCont}>\r\n          <p className={styles.notRecommendedTitle}>Food not recommended</p>\r\n          {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\r\n            <ul className={styles.notRecommendedList}>\r\n              {user.dietaryInfo.restrictedAliments.map((aliment) => (\r\n                <li\r\n                  key={aliment?._id}\r\n                  className={styles.notRecommendedListItem}\r\n                >\r\n                  {aliment.title}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p className={styles.notRecommendedEmpty}>\r\n              Your diet will be displayed here\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginStatistics.propTypes = {\r\n  day: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LoginStatistics;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__BThfT\",\"calculatorCont\":\"CalculatorPage_calculatorCont__YiC2M\",\"closeButton\":\"CalculatorPage_closeButton__7QQvZ\",\"closeModal\":\"CalculatorPage_closeModal__UBVBg\",\"mobileHeaderCont\":\"CalculatorPage_mobileHeaderCont__8tVqI\",\"modalHeader\":\"CalculatorPage_modalHeader__cMRWx\",\"logoHeaderContainer\":\"CalculatorPage_logoHeaderContainer__MUbFP\",\"mobileSubHeaderCont\":\"CalculatorPage_mobileSubHeaderCont__ZxoM4\",\"modalLogoutActionCenter\":\"CalculatorPage_modalLogoutActionCenter__l0Shn\",\"empty\":\"CalculatorPage_empty__X9vNS\",\"calories\":\"CalculatorPage_calories__vMxE7\",\"line\":\"CalculatorPage_line__-oFzb\",\"notEat\":\"CalculatorPage_notEat__f2IH0\",\"list\":\"CalculatorPage_list__rotNo\",\"link\":\"CalculatorPage_link__Wls6H\",\"leftCont\":\"CalculatorPage_leftCont__OWXFs\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Calculator from \"../../components/Calculator/Calculator\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  fetchPrivateCalculationData,\r\n  fetchConsumedProductsForSpecificDay,\r\n} from \"../../redux/private/operationsPrivate\";\r\nimport { resetPrivateForm } from \"../../redux/private/privateSlice\";\r\nimport { usePrivate } from \"../../hooks/usePrivate\";\r\n\r\nimport useToggle from \"../../hooks/useToggle\";\r\n\r\nimport NavLinks from \"../../components/NavLinks/NavLinks\";\r\n\r\nimport getFormattedDate from \"../../Utils/getFormattedDate\";\r\n\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\r\nimport Button from \"../../components/commonComponents/Button\";\r\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\r\nimport Loader from \"../../components/commonComponents/Loader\";\r\n\r\nimport { HiX } from \"react-icons/hi\";\r\n\r\nimport styles from \"./CalculatorPage.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nexport default function CalculatorPage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isCalculatorModalVisible, toggleIsCalculatorModalVisible] =\r\n    useToggle(false);\r\n  const modalRef = useRef();\r\n\r\n  const { privateDispatch, user, privateLoading } = usePrivate();\r\n\r\n  // console.log(\"user :\", user);\r\n\r\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n\r\n  const today = getFormattedDate();\r\n\r\n  useEffect(() => {\r\n    if (isCalculatorModalVisible) {\r\n      document.body.classList.add(styles.noScroll);\r\n    } else {\r\n      document.body.classList.remove(styles.noScroll);\r\n    }\r\n\r\n    const handleEscapeKey = (event) => {\r\n      if (event.key === \"Escape\") toggleIsCalculatorModalVisible();\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n\r\n    return () => {\r\n      document.body.classList.remove(styles.noScroll);\r\n      document.removeEventListener(\"keydown\", handleEscapeKey);\r\n    };\r\n  }, [isCalculatorModalVisible, toggleIsCalculatorModalVisible]);\r\n\r\n  const closeOnClickOutside = (event) => {\r\n    if (event.target !== event.currentTarget) {\r\n      toggleIsCalculatorModalVisible();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const today = getFormattedDate();\r\n    // console.log(\"Fetching data for date:\", today);\r\n\r\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today }));\r\n  }, [privateDispatch]);\r\n\r\n  const handleClick = () => {\r\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today }));\r\n  };\r\n\r\n  // console.log(getFormattedDate());\r\n\r\n  const handleSubmit = (formData) => {\r\n    privateDispatch(fetchPrivateCalculationData(formData));\r\n  };\r\n\r\n  function formatToDisplayDate(date) {\r\n    const [year, month, day] = date.split(\"-\");\r\n    return `${day}.${month}.${year}`;\r\n  }\r\n\r\n  function handleProductsForSelectedDate(date) {\r\n    setTimeout(() => {\r\n      privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\r\n    }, 1000);\r\n  }\r\n\r\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      {isCalculatorModalVisible && (\r\n        <div\r\n          ref={modalRef}\r\n          className={styles.modalOverlay}\r\n          onClick={closeOnClickOutside}\r\n        >\r\n          <div className={styles.modalContent}>\r\n            <Modal\r\n              closeButton={styles.closeButton}\r\n              handleModalClose={toggleIsCalculatorModalVisible}\r\n              isModalVisible={isCalculatorModalVisible}\r\n            >\r\n              {isMobile && (\r\n                <div className={styles.mobileHeaderCont}>\r\n                  <header className={styles.modalHeader}>\r\n                    <Logo className={styles.logoHeaderContainer} />\r\n                  </header>\r\n                  <div className={styles.mobileSubHeaderCont}>\r\n                    <button\r\n                      onClick={toggleIsCalculatorModalVisible}\r\n                      className={styles.mobileHeaderExitButton}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"15\"\r\n                        height=\"9\"\r\n                        viewBox=\"0 0 15 9\"\r\n                        fill=\"none\"\r\n                      >\r\n                        <path\r\n                          d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\r\n                          stroke=\"black\"\r\n                          strokeWidth=\"2\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className={styles.modalLogoutActionCenter}>\r\n                <button\r\n                  className={styles.closeModal}\r\n                  id=\"closeModal\"\r\n                  onClick={toggleIsCalculatorModalVisible}\r\n                >\r\n                  <HiX size=\"16px\" />\r\n                </button>\r\n                {!user && isMobile && <Loader />}\r\n                {user ? (\r\n                  <>\r\n                    <h2>Your recommended daily calorie intake is</h2>\r\n                    <p className={styles.calories}>\r\n                      {user?.dietaryInfo?.dailyCalorieIntake || \"N/A\"}\r\n                      <span>kcal</span>\r\n                    </p>\r\n                    <div className={styles.line}></div>\r\n                    <p className={styles.notEat}>Foods you should not eat</p>\r\n                    <ol className={styles.list}>\r\n                      {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\r\n                        user?.dietaryInfo?.restrictedAliments?.map((item) => (\r\n                          <li key={item._id}>{item.title}</li>\r\n                        ))\r\n                      ) : (\r\n                        <p className={styles.empty}>No foods listed</p>\r\n                      )}\r\n                    </ol>\r\n                    <Link className={styles.link} to=\"/\">\r\n                      <Button\r\n                        handleClick={() => {\r\n                          toggleIsCalculatorModalVisible();\r\n                          dispatch(resetPrivateForm);\r\n                        }}\r\n                        type=\"button\"\r\n                        variant=\"colored\"\r\n                      >\r\n                        Start losing weight\r\n                      </Button>\r\n                    </Link>\r\n                  </>\r\n                ) : (\r\n                  privateLoading && <p className={styles.empty}>Loading...</p>\r\n                )}\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className={styles.calculatorCont}>\r\n        {isDesktop && (\r\n          <div className={styles.leftCont}>\r\n            <Logo />\r\n            <NavLinks />\r\n          </div>\r\n        )}\r\n        <Calculator\r\n          onSubmit={(formData) => {\r\n            handleSubmit(formData);\r\n            handleProductsForSelectedDate(today);\r\n            handleClick();\r\n            toggleIsCalculatorModalVisible();\r\n          }}\r\n        />\r\n      </div>\r\n      <LoginStatistics day={formatToDisplayDate(today)} />\r\n    </section>\r\n  );\r\n}\r\n"],"names":["selectFormData","createSelector","state","publicCalculatorSlice","height","age","currentWeight","desiredWeight","bloodGroupIndex","selectResult","result","selectLoading","loading","selectError","error","selectProducts","products","selectProduct","product","usePublic","dispatch","useDispatch","formData","useSelector","isLoading","errorPublic","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","min","step","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","bloodTypeOptions","label","WeightLossForm","_bloodTypeOptions$fin","onSubmit","isLoggedIn","useAuth","user","usePrivate","userHeight","userAge","userWeight","weight","userDesiredWeight","userBloodType","bloodType","privateFormData","privateLoading","privateDispatch","useEffect","defaultValues","setter","setAction","setPrivateFormData","setFormData","Object","entries","forEach","_ref2","key","isValid","values","every","field","toString","trim","e","target","_jsxs","preventDefault","form","formMainCont","formLeftCont","inputWrapper","formRightCont","bloodTypeContainer","find","opt","String","readOnly","radioGroup","map","option","React","id","concat","checked","handleRadioChange","radioInput","htmlFor","radioLabel","Button","disabled","Calculator","cont","title","warn","getFormattedDate","today","Date","year","getFullYear","month","getMonth","padStart","day","getDate","breakpoints","_user$dietaryInfo","_user$dietaryInfo$res","isDesktop","useMediaQuery","query","dailyCalorieSummary","userUpdateShown","setUserUpdateShown","useState","test","console","UpdateUser","theme","onClose","UserLogout","handleUpdateUserClick","handleUpdateUser","log","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","marginBottom","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","aliment","_id","mobile","tablet","desktop","CalculatorPage","_user$dietaryInfo2","_user$dietaryInfo2$re","_user$dietaryInfo3","_user$dietaryInfo3$re","isCalculatorModalVisible","toggleIsCalculatorModalVisible","useToggle","modalRef","useRef","document","body","classList","add","noScroll","remove","handleEscapeKey","event","addEventListener","removeEventListener","fetchConsumedProductsForSpecificDay","date","isMobile","section","ref","modalOverlay","onClick","currentTarget","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","modalHeader","Logo","logoHeaderContainer","mobileSubHeaderCont","mobileHeaderExitButton","xmlns","viewBox","fill","d","stroke","strokeWidth","modalLogoutActionCenter","closeModal","HiX","size","Loader","_Fragment","calories","line","notEat","list","item","empty","Link","link","to","handleClick","resetPrivateForm","calculatorCont","leftCont","NavLinks","fetchPrivateCalculationData","handleSubmit","setTimeout","LoginStatistics","split","formatToDisplayDate"],"sourceRoot":""}
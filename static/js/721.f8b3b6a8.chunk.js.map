{"version":3,"file":"static/js/721.f8b3b6a8.chunk.js","mappings":"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","sources":["Utils/calculateSleepHours.js","Utils/calculateIntervalSleeptHours.js","Utils/calculateNominalBPAndPulse.js","Utils/calculateDailySteps.js","assets/generateReportPdf.js","webpack://health-monitor/./src/components/ReportModal/ReportModal.module.css?c2db","components/ReportModal/ReportModal.jsx","webpack://health-monitor/./src/pages/ExportReportsPage/ExportReportsPage.module.css?a167","pages/ExportReportsPage/ExportReportsPage.jsx","pages/ExportReportsPage/index.js","Utils/getDaysInterval.js"],"sourcesContent":["export default function calculateSleepHours(age, activityLevel = \"moderate\") {\r\n  let sleepRange;\r\n\r\n  if (age < 14) {\r\n    sleepRange = [9, 11];\r\n  } else if (age <= 17) {\r\n    sleepRange = [8, 10];\r\n  } else if (age <= 64) {\r\n    sleepRange = [7, 9];\r\n  } else {\r\n    sleepRange = [7, 8];\r\n  }\r\n\r\n  if (activityLevel === \"high\") {\r\n    sleepRange = [sleepRange[0] + 0.5, sleepRange[1] + 1];\r\n  }\r\n\r\n  const min = sleepRange[0];\r\n  const max = sleepRange[1];\r\n\r\n  const medium = (max + min) / 2;\r\n\r\n  return medium;\r\n}\r\n","export default function calculateIntervalSleeptHours(\r\n  fromHour,\r\n  fromMinute,\r\n  fromAmPm,\r\n  toHour,\r\n  toMinute,\r\n  toAmPm\r\n) {\r\n  // normalize input (string -> number, trim)\r\n  const fH = Number(String(fromHour).trim());\r\n  //   console.log(\"fH :\", fH);\r\n\r\n  const fM = Number(String(fromMinute).trim());\r\n  const tH = Number(String(toHour).trim());\r\n  const tM = Number(String(toMinute).trim());\r\n  const fAP = String(fromAmPm || \"\")\r\n    .trim()\r\n    .toUpperCase();\r\n  //   console.log(\"fAP :\", fAP);\r\n\r\n  const tAP = String(toAmPm || \"\")\r\n    .trim()\r\n    .toUpperCase();\r\n\r\n  // validate\r\n  if ([fH, fM, tH, tM].some(Number.isNaN)) return 0;\r\n\r\n  // convert to 24h using modulo pentru a trata 12 AM / 12 PM corect:\r\n  // 12 AM -> 0, 12 PM -> 12\r\n  let fromH24 = fH % 12;\r\n  if (fAP === \"PM\") fromH24 += 12;\r\n\r\n  let toH24 = tH % 12;\r\n  if (tAP === \"PM\") toH24 += 12;\r\n\r\n  const fromTotalMin = fromH24 * 60 + fM;\r\n  const toTotalMin = toH24 * 60 + tM;\r\n\r\n  let minutesSlept = toTotalMin - fromTotalMin;\r\n  if (minutesSlept < 0) minutesSlept += 24 * 60; // overnight\r\n\r\n  const hours = minutesSlept / 60;\r\n  // return Number cu o zecimală\r\n  return parseFloat(hours.toFixed(1));\r\n}\r\n","/**\r\n * Calculate nominal heart rate and blood pressure with age- and weight-adjusted limits\r\n * @param {number} age - age in years\r\n * @param {number} weight - weight in kg\r\n * @returns {object} - { heartRate, heartRateMin, heartRateMax, systolic, systolicMin, systolicMax, diastolic, diastolicMin, diastolicMax }\r\n */\r\nexport default function calculateNominalBPAndPulse(age, weight) {\r\n  if (!age) {\r\n    return 0;\r\n  }\r\n\r\n  // Puls nominal: 70 ± 10, ajustat cu varsta\r\n  const heartRate = Math.round(70 + (age - 30) * 0.3);\r\n  const heartRateMin = Math.round(heartRate - 10);\r\n  const heartRateMax = Math.round(heartRate + 10);\r\n\r\n  // Tensiune arterială nominală: sistolic 110 ± 10, diastolic 70 ± 5, ajustate cu vârsta\r\n  const systolic = Math.round(110 + age * 0.5);\r\n  const systolicMin = Math.round(systolic - 10);\r\n  const systolicMax = Math.round(systolic + 10);\r\n\r\n  const diastolic = Math.round(70 + age * 0.2);\r\n  const diastolicMin = Math.round(diastolic - 5);\r\n  const diastolicMax = Math.round(diastolic + 5);\r\n\r\n  // Ajustare ușoară în funcție de greutate\r\n  let hr = heartRate,\r\n    hrMin = heartRateMin,\r\n    hrMax = heartRateMax;\r\n  let sys = systolic,\r\n    sysMin = systolicMin,\r\n    sysMax = systolicMax;\r\n  let dia = diastolic,\r\n    diaMin = diastolicMin,\r\n    diaMax = diastolicMax;\r\n\r\n  if (weight) {\r\n    if (weight > 80) {\r\n      hr += 2;\r\n      hrMin += 2;\r\n      hrMax += 2;\r\n      sys += 3;\r\n      sysMin += 3;\r\n      sysMax += 3;\r\n      dia += 2;\r\n      diaMin += 2;\r\n      diaMax += 2;\r\n    } else if (weight < 60) {\r\n      hr -= 2;\r\n      hrMin -= 2;\r\n      hrMax -= 2;\r\n      sys -= 3;\r\n      sysMin -= 3;\r\n      sysMax -= 3;\r\n      dia -= 2;\r\n      diaMin -= 2;\r\n      diaMax -= 2;\r\n    }\r\n  }\r\n\r\n  return {\r\n    heartRate: hr,\r\n    heartRateMin: hrMin,\r\n    heartRateMax: hrMax,\r\n    systolic: sys,\r\n    systolicMin: sysMin,\r\n    systolicMax: sysMax,\r\n    diastolic: dia,\r\n    diastolicMin: diaMin,\r\n    diastolicMax: diaMax,\r\n  };\r\n}\r\n","export default function calculateDailySteps(\r\n  age,\r\n  currentWeight,\r\n  desiredWeight,\r\n  height\r\n) {\r\n  // Basal metabolic factor depending on age (younger -> higher activity need)\r\n  let ageFactor;\r\n  if (age < 30) ageFactor = 1.2;\r\n  else if (age < 50) ageFactor = 1.1;\r\n  else ageFactor = 1.0;\r\n\r\n  // Maintenance steps baseline (based on height and weight balance)\r\n  let baseSteps = 6000 + (height - 150) * 20;\r\n\r\n  // Difference between current and desired weight\r\n  let weightDiff = desiredWeight - currentWeight;\r\n\r\n  let adjustment;\r\n  if (weightDiff === 0) {\r\n    // Maintain weight\r\n    adjustment = 0;\r\n  } else if (weightDiff < 0) {\r\n    // Lose weight → increase steps\r\n    adjustment = Math.abs(weightDiff) * 200;\r\n  } else {\r\n    // Gain weight → fewer steps needed\r\n    adjustment = -weightDiff * 150;\r\n  }\r\n\r\n  // Final calculation with age factor\r\n  let dailySteps =\r\n    age && currentWeight && desiredWeight & height\r\n      ? Math.round((baseSteps + adjustment) * ageFactor)\r\n      : 0;\r\n\r\n  // Ensure a healthy minimum and maximum\r\n  if (dailySteps < 4000) dailySteps = 4000;\r\n  if (dailySteps > 15000) dailySteps = 15000;\r\n\r\n  return dailySteps;\r\n}\r\n","import jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\nexport default function generateReportPdf(report) {\r\n  const doc = new jsPDF();\r\n\r\n  // --- Titlu ---\r\n  doc.setFontSize(16);\r\n  doc.text(`Health Report for ${report.name}`, 14, 20);\r\n\r\n  // --- Perioada ---\r\n  doc.setFontSize(12);\r\n  const isSingleDay = report.from === report.till;\r\n  const periodText = isSingleDay\r\n    ? `Date: ${new Date(report.from).toDateString()}`\r\n    : `Period: ${new Date(report.from).toDateString()} - ${new Date(\r\n        report.till\r\n      ).toDateString()}`;\r\n  doc.text(periodText, 14, 30);\r\n\r\n  // --- Recomandări ---\r\n  let y = 40;\r\n  doc.text(\r\n    \"Based on your personal info, your daily recommended values are:\",\r\n    14,\r\n    y\r\n  );\r\n  y += 8;\r\n  doc.text(`Calories: ${report.caloriesRecommended}`, 14, y);\r\n  y += 6;\r\n  doc.text(`Steps: ${report.stepsRecommended}`, 14, y);\r\n  y += 6;\r\n  doc.text(`Sleep: ${report.sleepRecommended}h`, 14, y);\r\n  y += 6;\r\n  doc.text(\r\n    `Pulse: ${report.pulseRecommended} (Range: ${report.heartRateMin} - ${report.heartRateMax})`,\r\n    14,\r\n    y\r\n  );\r\n  y += 6;\r\n  doc.text(\r\n    `Blood Pressure: ${report.systolicRecommended}/${report.diastolicRecommended} (Sys ${report.systolicMin}-${report.systolicMax}, Dia ${report.diastolicMin}-${report.diastolicMax})`,\r\n    14,\r\n    y\r\n  );\r\n  y += 12;\r\n\r\n  // --- Dacă nu există date ---\r\n  if (!report.dates || report.dates.length === 0) {\r\n    doc.setTextColor(200, 0, 0);\r\n    doc.text(\"No records for this period\", 14, y);\r\n    return doc;\r\n  }\r\n\r\n  // --- Tabel ---\r\n  const tableColumns = [\r\n    \"Date\",\r\n    \"Calories\",\r\n    \"Steps\",\r\n    \"Sleep (h)\",\r\n    \"Pulse\",\r\n    \"Blood Pressure\",\r\n  ];\r\n\r\n  const tableRows = report.dates.map((day) => {\r\n    // Date simplu\r\n    const dateLabel = new Date(day.date).toDateString();\r\n\r\n    // Calories\r\n    let caloriesText = \"No records\";\r\n    if (day.calories > 0) {\r\n      caloriesText =\r\n        day.calories < report.caloriesRecommended * 0.6 ||\r\n        day.calories > report.caloriesRecommended\r\n          ? `${day.calories} (!)`\r\n          : `${day.calories} (OK)`;\r\n    }\r\n\r\n    // Steps\r\n    let stepsText = \"No records\";\r\n    if (day.steps > 0) {\r\n      stepsText =\r\n        day.steps < report.stepsRecommended * 0.6\r\n          ? `${day.steps} (!)`\r\n          : `${day.steps} (OK)`;\r\n    }\r\n\r\n    // Sleep\r\n    let sleepText = \"No records\";\r\n    if (day.sleep > 0) {\r\n      const sleepValue = Number(day.sleep.toFixed(1));\r\n      sleepText =\r\n        sleepValue < report.sleepRecommended * 0.6 ||\r\n        sleepValue > report.sleepRecommended + 1\r\n          ? `${sleepValue}h (!)`\r\n          : `${sleepValue}h (OK)`;\r\n    }\r\n\r\n    // Pulse\r\n    const pulseText = day.pulse ? String(day.pulse) : \"-\";\r\n\r\n    // Blood Pressure\r\n    const bloodText =\r\n      day.systolic && day.diastolic ? `${day.systolic}/${day.diastolic}` : \"-\";\r\n\r\n    return [\r\n      dateLabel,\r\n      caloriesText,\r\n      stepsText,\r\n      sleepText,\r\n      pulseText,\r\n      bloodText,\r\n    ];\r\n  });\r\n\r\n  autoTable(doc, {\r\n    head: [tableColumns],\r\n    body: tableRows,\r\n    startY: y,\r\n    styles: { fontSize: 10 },\r\n    didParseCell: (data) => {\r\n      if (data.section === \"body\") {\r\n        const text = String(data.cell.text[0]);\r\n        if (text.includes(\"(!)\")) data.cell.styles.textColor = [200, 0, 0];\r\n        else if (text.includes(\"(OK)\"))\r\n          data.cell.styles.textColor = [0, 150, 0];\r\n        else if (text === \"No records\")\r\n          data.cell.styles.textColor = [200, 0, 0];\r\n      }\r\n    },\r\n  });\r\n\r\n  return doc;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"ReportModal_overlay__9OjcE\",\"modal\":\"ReportModal_modal__TXmzG\",\"buttons\":\"ReportModal_buttons__Um1Mh\",\"downloadBtn\":\"ReportModal_downloadBtn__4VLlq\",\"closeBtn\":\"ReportModal_closeBtn__tUIlK\"};","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { toast } from \"react-toastify\";\r\nimport generateReportPdf from \"../../assets/generateReportPdf\";\r\nimport styles from \"./ReportModal.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px) and (max-width:1023px)\",\r\n  desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nexport default function ReportModal({ report, onClose }) {\r\n  const [pdfUrl, setPdfUrl] = useState(\"\");\r\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\r\n  const isTablet = useMediaQuery({ query: breakpoints.tablet });\r\n\r\n  const normalizedDay = (day) => new Date(day).toDateString();\r\n\r\n  useEffect(() => {\r\n    if (!report) return;\r\n    const doc = generateReportPdf(report);\r\n    const pdfBlob = doc.output(\"blob\");\r\n    const url = URL.createObjectURL(pdfBlob);\r\n    setPdfUrl(url); // folosit doar pentru desktop\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [report]);\r\n\r\n  const handleOpenPdf = () => {\r\n    if (!report) return;\r\n    const doc = generateReportPdf(report);\r\n    const pdfBlob = doc.output(\"blob\");\r\n    const url = URL.createObjectURL(pdfBlob);\r\n    if (isMobile || isTablet) {\r\n      window.open(url, \"_blank\");\r\n      toast.success(\"Report opened in a new tab\");\r\n    } else {\r\n      setPdfUrl(url);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!report) return;\r\n    const doc = generateReportPdf(report);\r\n    const fileName = `${report.name}_Health_Report-${normalizedDay(\r\n      report.from\r\n    )}${\r\n      report.from !== report.till ? \"-\" + normalizedDay(report.till) : \"\"\r\n    }.pdf`;\r\n    doc.save(fileName);\r\n    if (isMobile || isTablet) toast.success(\"Report saved successfully\");\r\n  };\r\n\r\n  if (!report) return null;\r\n\r\n  return (\r\n    <div className={styles.overlay}>\r\n      <div className={styles.modal}>\r\n        <h2>PDF Preview</h2>\r\n        {!isMobile && !isTablet && pdfUrl && (\r\n          <iframe\r\n            src={pdfUrl}\r\n            title=\"PDF Preview\"\r\n            width=\"100%\"\r\n            height=\"400px\"\r\n            style={{ border: \"1px solid #ccc\" }}\r\n          />\r\n        )}\r\n        <div className={styles.buttons}>\r\n          {(isMobile || isTablet) && (\r\n            <button onClick={handleOpenPdf} className={styles.downloadBtn}>\r\n              Open PDF\r\n            </button>\r\n          )}\r\n          <button onClick={handleDownload} className={styles.downloadBtn}>\r\n            Download\r\n          </button>\r\n          <button onClick={onClose} className={styles.closeBtn}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReportModal.propTypes = {\r\n  report: PropTypes.object,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ExportReportsPage_cont__1zoQI\",\"leftSideCont\":\"ExportReportsPage_leftSideCont__uZclQ\",\"rightSideCont\":\"ExportReportsPage_rightSideCont__vO9qL\",\"title\":\"ExportReportsPage_title__aXrG+\",\"datesCont\":\"ExportReportsPage_datesCont__7LVwB\",\"dateCont\":\"ExportReportsPage_dateCont__HMw5R\",\"date\":\"ExportReportsPage_date__vWMEu\",\"generateBtn\":\"ExportReportsPage_generateBtn__fDduX\",\"rightSideContList\":\"ExportReportsPage_rightSideContList__Dwjwb\",\"rightSideContListItem\":\"ExportReportsPage_rightSideContListItem__G3WVz\",\"rightSideContListItemLeftCont\":\"ExportReportsPage_rightSideContListItemLeftCont__GoQy7\",\"btnsCont\":\"ExportReportsPage_btnsCont__U3gKq\",\"openReportModalBtn\":\"ExportReportsPage_openReportModalBtn__k1U-O\",\"rightSideContListItemDatesCont\":\"ExportReportsPage_rightSideContListItemDatesCont__ZHQia\",\"downloadBtn\":\"ExportReportsPage_downloadBtn__G+t0n\",\"deleteBtn\":\"ExportReportsPage_deleteBtn__9IRiH\",\"empty\":\"ExportReportsPage_empty__ktki2\"};","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { usePrivate } from \"../../hooks/usePrivate\";\r\nimport {\r\n  addUpdateReport,\r\n  deleteRport,\r\n} from \"../../redux/private/operationsPrivate\";\r\n\r\nimport calculateDailySteps from \"../../Utils/calculateDailySteps\";\r\nimport calculateSleepHours from \"../../Utils/calculateSleepHours\";\r\nimport calculateNominalBPAndPulse from \"../../Utils/calculateNominalBPAndPulse\";\r\nimport getDaysInterval from \"../../Utils/getDaysInterval\";\r\nimport calculateIntervalSleeptHours from \"../../Utils/calculateIntervalSleeptHours\";\r\n\r\nimport generateReportPdf from \"../../assets/generateReportPdf\";\r\n\r\nimport ReportModal from \"../../components/ReportModal/ReportModal\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./ExportReportsPage.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nexport default function ExportReportsPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\r\n\r\n  const { user, privateDispatch } = usePrivate();\r\n  // console.log(\"user exports:\", user);\r\n\r\n  const name = user?.username || user?.name || \"User\";\r\n  const age = user?.age || 0;\r\n  const height = user?.height || 0;\r\n  const weight = user?.weight || 0;\r\n  const desiredWeight = user?.desiredWeight || 0;\r\n  const blood = user?.bloodType || 0;\r\n\r\n  // const bloodTypeOptions = [\r\n  //   { value: \"1\", label: \"A\" },\r\n  //   { value: \"2\", label: \"B\" },\r\n  //   { value: \"3\", label: \"AB\" },\r\n  //   { value: \"4\", label: \"O\" },\r\n  // ];\r\n\r\n  // const bloodType =\r\n  //   bloodTypeOptions.find((opt) => opt.value === String(blood))?.label || \"A\";\r\n\r\n  const usersCondition =\r\n    age > 0 || height > 0 || weight > 0 || desiredWeight > 0 || blood > 0;\r\n\r\n  // console.log(\"bloodType :\", bloodType);\r\n\r\n  const caloriesRecommended = user?.dietaryInfo?.dailyCalorieIntake;\r\n  const stepsRecommended = calculateDailySteps(\r\n    age,\r\n    weight,\r\n    desiredWeight,\r\n    height\r\n  );\r\n  const sleepRecommended = calculateSleepHours(age);\r\n  const heartsMetrix = calculateNominalBPAndPulse(age, weight);\r\n  const {\r\n    heartRate,\r\n    systolic,\r\n    diastolic,\r\n    heartRateMin,\r\n    heartRateMax,\r\n    systolicMin,\r\n    systolicMax,\r\n    diastolicMin,\r\n    diastolicMax,\r\n  } = heartsMetrix;\r\n  // console.log(\"pulseRecommended :\", heartRate);\r\n\r\n  // console.log(\"systolicRecommended :\", systolic);\r\n\r\n  // console.log(\"diastolicRecommended :\", diastolic);\r\n\r\n  const normalizedDay = (day) => new Date(day).toISOString().split(\"T\")[0];\r\n\r\n  const userReports = useMemo(() => user?.reports || [], [user?.reports]);\r\n\r\n  const [reports, setReports] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sortedReports = [...userReports].sort(\r\n      (a, b) => new Date(b.from) - new Date(a.from)\r\n    );\r\n\r\n    // console.log(\"sortedReports :\", sortedReports);\r\n\r\n    setReports([...sortedReports]);\r\n  }, [setReports, userReports]);\r\n\r\n  const now = new Date();\r\n  const today = normalizedDay(now);\r\n  const [startDate, setStartDate] = useState(today);\r\n  const [endDate, setEndDate] = useState(today);\r\n\r\n  const [report, setReport] = useState({\r\n    from: startDate,\r\n    till: endDate,\r\n    name: name,\r\n    age: age,\r\n    height: height,\r\n    weight: weight,\r\n    desiredWeight: desiredWeight,\r\n    bloodType: blood,\r\n    caloriesRecommended: caloriesRecommended,\r\n    stepsRecommended: stepsRecommended,\r\n    sleepRecommended: sleepRecommended,\r\n    systolicRecommended: systolic,\r\n    diastolicRecommended: diastolic,\r\n    pulseRecommended: heartRate,\r\n    heartRateMin: heartRateMin,\r\n    heartRateMax: heartRateMax,\r\n    systolicMin: systolicMin,\r\n    systolicMax: systolicMax,\r\n    diastolicMin: diastolicMin,\r\n    diastolicMax: diastolicMax,\r\n    dates: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setReport((prev) => ({\r\n      ...prev,\r\n      from: startDate,\r\n      till: endDate,\r\n    }));\r\n  }, [startDate, endDate]);\r\n\r\n  // console.log(\"report :\", report);\r\n\r\n  const daysInterval = useMemo(\r\n    () => getDaysInterval(startDate, endDate),\r\n    [startDate, endDate]\r\n  );\r\n\r\n  // console.log(daysInterval);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n\r\n    const newDates = daysInterval.map((day) => {\r\n      const consumedProductsForDay = (user?.consumedProducts || []).filter(\r\n        (product) => normalizedDay(product?.date) === normalizedDay(day)\r\n      );\r\n\r\n      const totalCalories = consumedProductsForDay.reduce((acc, product) => {\r\n        if (consumedProductsForDay.length === 0) {\r\n          return 0;\r\n        } else {\r\n          acc = acc + product.calories;\r\n        }\r\n\r\n        return acc;\r\n      }, 0);\r\n\r\n      const stepsForDay = (user?.steps || []).find(\r\n        (step) => normalizedDay(step.date) === normalizedDay(day)\r\n      );\r\n      const totalSteps = stepsForDay\r\n        ? stepsForDay?.interval?.reduce((acc, int) => {\r\n            acc += int.steps;\r\n            return acc;\r\n          }, 0)\r\n        : 0;\r\n\r\n      const sleepForDay = (user?.sleep || []).find(\r\n        (sl) => normalizedDay(sl.date) === normalizedDay(day)\r\n      );\r\n      // console.log(\"sleepForDay :\", sleepForDay);\r\n\r\n      const totalSleptHours = sleepForDay\r\n        ? sleepForDay.interval?.reduce((acc, int) => {\r\n            acc =\r\n              acc +\r\n              calculateIntervalSleeptHours(\r\n                int.fromHour,\r\n                int.fromMinute,\r\n                int.fromAmPm,\r\n                int.tillHour,\r\n                int.tillMinute,\r\n                int.tillAmPm\r\n              );\r\n            // console.log(\"acc :\", acc);\r\n\r\n            return acc;\r\n          }, 0)\r\n        : 0;\r\n      // console.log(\"totalSlept :\", totalSleptHours, \"day :\", day);\r\n\r\n      const heartForDay = (user?.heart || []).find(\r\n        (hr) => normalizedDay(hr.date) === normalizedDay(day)\r\n      );\r\n\r\n      const userHeart = heartForDay\r\n        ? {\r\n            pulse: heartForDay?.pulse,\r\n            systolic: heartForDay?.systolic,\r\n            diastolic: heartForDay?.diastolic,\r\n          }\r\n        : 0;\r\n\r\n      const datesCopndition =\r\n        totalCalories > 0 ||\r\n        totalSteps > 0 ||\r\n        totalSleptHours > 0 ||\r\n        userHeart > 0;\r\n\r\n      return datesCopndition\r\n        ? {\r\n            date: day,\r\n            calories: totalCalories,\r\n            steps: totalSteps,\r\n            sleep: totalSleptHours,\r\n            systolic: userHeart.systolic || 0,\r\n            diastolic: userHeart.diastolic || 0,\r\n            pulse: userHeart.pulse || 0,\r\n          }\r\n        : null;\r\n    });\r\n\r\n    const filteredNewDates = newDates.filter((date) => date !== null);\r\n\r\n    setReport((prev) => ({\r\n      ...prev,\r\n      dates: filteredNewDates,\r\n    }));\r\n  }, [daysInterval, user]);\r\n\r\n  // console.log(\"daysInterval :\", daysInterval);\r\n\r\n  const styledReportDate = (date) => new Date(date).toDateString();\r\n\r\n  function handleGenerate() {\r\n    privateDispatch(addUpdateReport({ report: { ...report } }));\r\n    setStartDate(today);\r\n    setEndDate(today);\r\n  }\r\n\r\n  const handleDownload = (report) => {\r\n    const doc = generateReportPdf(report);\r\n\r\n    const fileName = `${report.name}_Health_Report-${styledReportDate(\r\n      report.from\r\n    )}${\r\n      report.from !== report.till ? \"-\" + styledReportDate(report.till) : \"\"\r\n    }.pdf`;\r\n\r\n    doc.save(fileName);\r\n    isMobile && toast.success(\"Report saved sucsessfully\");\r\n  };\r\n\r\n  const [selectedReport, setSelectedReport] = useState(null);\r\n\r\n  const handleOpenReportModal = (report) => {\r\n    setSelectedReport(report);\r\n  };\r\n\r\n  const handleCloseReportModal = () => {\r\n    setSelectedReport(null);\r\n  };\r\n\r\n  function handleDeleteReport(id) {\r\n    privateDispatch(deleteRport({ id: id }));\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.leftSideCont}>\r\n        <h1 className={styles.title}>Exports & Reports</h1>\r\n        <div className={styles.datesCont}>\r\n          <div className={styles.dateCont}>\r\n            <p className={styles.dateTitle}>Start date</p>\r\n            <input\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              value={startDate}\r\n              className={styles.date}\r\n              max={today}\r\n              type=\"date\"\r\n            />\r\n          </div>\r\n          <div className={styles.dateCont}>\r\n            <p className={styles.dateTitle}>End date</p>\r\n            <input\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              value={endDate}\r\n              className={styles.date}\r\n              min={startDate}\r\n              max={today}\r\n              type=\"date\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {usersCondition ? (\r\n          <button\r\n            onClick={handleGenerate}\r\n            className={styles.generateBtn}\r\n            type=\"button\"\r\n          >\r\n            Generate report\r\n          </button>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              gap: \"5px\",\r\n              background: \"aliceblue\",\r\n              border: \"1px solid var(--Gray-5)\",\r\n              borderRadius: \"5px\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ display: \"flex\", textAlign: \"center\", color: \"red\" }}>\r\n              It seems that you did not set up your personal info. Please Go:\r\n            </p>\r\n            <button\r\n              onClick={() => navigate(\"/\")}\r\n              className={styles.generateBtn}\r\n              type=\"button\"\r\n            >\r\n              Diet Calculator\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.rightSideCont}>\r\n        <h1 className={styles.title}>Generated Reports...</h1>\r\n        <ul className={styles.rightSideContList}>\r\n          {reports.length > 0 ? (\r\n            reports.map((report) => {\r\n              return (\r\n                <li\r\n                  key={`report-${report._id}`}\r\n                  className={styles.rightSideContListItem}\r\n                >\r\n                  <div className={styles.rightSideContListItemLeftCont}>\r\n                    <div className={styles.btnsCont}>\r\n                      <button\r\n                        onClick={() => handleOpenReportModal(report)}\r\n                        type=\"button\"\r\n                        className={styles.openReportModalBtn}\r\n                      >\r\n                        PDF Report\r\n                      </button>\r\n\r\n                      <button\r\n                        onClick={() => handleDeleteReport(report._id)}\r\n                        type=\"button\"\r\n                        className={clsx(\r\n                          styles.openReportModalBtn,\r\n                          styles.deleteBtn\r\n                        )}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                    <div className={styles.rightSideContListItemDatesCont}>\r\n                      <span>{styledReportDate(report.from)}</span>\r\n                      {report.from !== report.till && (\r\n                        <span>-{styledReportDate(report.till)}</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => handleDownload(report)}\r\n                    type=\"button\"\r\n                    className={styles.downloadBtn}\r\n                  >\r\n                    Download\r\n                  </button>\r\n                </li>\r\n              );\r\n            })\r\n          ) : (\r\n            <li className={clsx(styles.rightSideContListItem, styles.empty)}>\r\n              No Reports Yet\r\n            </li>\r\n          )}\r\n        </ul>\r\n\r\n        {selectedReport && (\r\n          <ReportModal\r\n            report={selectedReport}\r\n            onClose={handleCloseReportModal}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import ExportReportsPage from \"./ExportReportsPage\";\r\n\r\nexport default ExportReportsPage;\r\n","export default function getDaysInterval(start, end) {\r\n  const daysDates = [];\r\n\r\n  const normalizedDay = (day) => new Date(day).toISOString().split(\"T\")[0];\r\n\r\n  const startInterval = new Date(start);\r\n  startInterval.setHours(0, 0, 0, 0);\r\n\r\n  const endInterval = new Date(end);\r\n  endInterval.setHours(0, 0, 0, 0);\r\n\r\n  const diffMilisecondsIntervals = endInterval - startInterval;\r\n  const numberOfDays = Math.ceil(\r\n    diffMilisecondsIntervals / (1000 * 60 * 60 * 24)\r\n  );\r\n\r\n  for (let index = 1; index <= numberOfDays + 1; index++) {\r\n    const currentDay = new Date(startInterval);\r\n    currentDay.setDate(startInterval.getDate() + index);\r\n    daysDates.push(normalizedDay(currentDay));\r\n  }\r\n\r\n  return daysDates;\r\n}\r\n"],"names":["calculateSleepHours","age","sleepRange","arguments","length","undefined","min","calculateIntervalSleeptHours","fromHour","fromMinute","fromAmPm","toHour","toMinute","toAmPm","fH","Number","String","trim","fM","tH","tM","fAP","toUpperCase","tAP","some","isNaN","fromH24","toH24","minutesSlept","parseFloat","toFixed","calculateNominalBPAndPulse","weight","heartRate","Math","round","heartRateMin","heartRateMax","systolic","systolicMin","systolicMax","diastolic","hr","hrMin","hrMax","sys","sysMin","sysMax","dia","diaMin","diaMax","diastolicMin","diastolicMax","calculateDailySteps","currentWeight","desiredWeight","height","ageFactor","adjustment","baseSteps","weightDiff","abs","dailySteps","generateReportPdf","report","doc","jsPDF","setFontSize","text","concat","name","periodText","from","till","Date","toDateString","y","caloriesRecommended","stepsRecommended","sleepRecommended","pulseRecommended","systolicRecommended","diastolicRecommended","dates","setTextColor","tableRows","map","day","dateLabel","date","caloriesText","calories","stepsText","steps","sleepText","sleep","sleepValue","pulse","autoTable","head","body","startY","styles","fontSize","didParseCell","data","section","cell","includes","textColor","breakpoints","ReportModal","_ref","onClose","pdfUrl","setPdfUrl","useState","isMobile","useMediaQuery","query","isTablet","normalizedDay","useEffect","pdfBlob","output","url","URL","createObjectURL","revokeObjectURL","_jsx","className","children","_jsxs","src","title","width","style","border","onClick","handleOpenPdf","window","open","toast","success","handleDownload","fileName","save","_user$dietaryInfo","navigate","useNavigate","user","privateDispatch","usePrivate","username","blood","bloodType","usersCondition","dietaryInfo","dailyCalorieIntake","heartsMetrix","toISOString","split","userReports","useMemo","reports","setReports","sortedReports","sort","a","b","now","today","startDate","setStartDate","endDate","setEndDate","setReport","prev","_objectSpread","daysInterval","start","end","daysDates","startInterval","setHours","endInterval","diffMilisecondsIntervals","numberOfDays","ceil","index","currentDay","setDate","getDate","push","getDaysInterval","filteredNewDates","_stepsForDay$interval","_sleepForDay$interval","consumedProductsForDay","consumedProducts","filter","product","totalCalories","reduce","acc","stepsForDay","find","step","totalSteps","interval","int","sleepForDay","sl","totalSleptHours","tillHour","tillMinute","tillAmPm","heartForDay","heart","userHeart","styledReportDate","selectedReport","setSelectedReport","cont","leftSideCont","datesCont","dateCont","dateTitle","onChange","e","target","value","max","type","addUpdateReport","generateBtn","display","flexDirection","alignItems","gap","background","borderRadius","padding","textAlign","color","rightSideCont","rightSideContList","rightSideContListItem","rightSideContListItemLeftCont","btnsCont","handleOpenReportModal","openReportModalBtn","handleDeleteReport","id","_id","deleteRport","clsx","deleteBtn","rightSideContListItemDatesCont","downloadBtn","empty","handleCloseReportModal"],"sourceRoot":""}
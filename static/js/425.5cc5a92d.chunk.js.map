{"version":3,"file":"static/js/425.5cc5a92d.chunk.js","mappings":"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","sources":["hooks/useFormValidation.js","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://health-monitor/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://health-monitor/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx","hooks/useFormTouched.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__wOEyk\",\"input\":\"Input_input__XbaoR\",\"inputCenter\":\"Input_inputCenter__xDESs\",\"inputInfo\":\"Input_inputInfo__zGyqR\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  min = 0,\r\n  step,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        step={step}\r\n        min={min}\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  min: PropTypes.number,\r\n  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","const validateRegister = (fields) => {\r\n    const newErrors = {};\r\n    if (!fields.username) {\r\n        newErrors.username = \"Username is required\";\r\n    }\r\n    if (fields.password.length < 6) {\r\n        newErrors.password = \"Password must be at least 6 characters!\";\r\n    }\r\n    if (!fields.email) {\r\n        newErrors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        newErrors.password = \"Password is required\";\r\n    }\r\n\r\n    return newErrors;\r\n};\r\n\r\nexport default validateRegister;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst usePasswordStrength = (password) => {\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculatePasswordStrength = (password) => {\r\n      let strength = 0;\r\n\r\n      if (password.length > 7) strength += 1;\r\n      if (password.length > 10) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n\r\n      return strength;\r\n    };\r\n\r\n    setStrength(calculatePasswordStrength(password));\r\n  }, [password]);\r\n\r\n  return strength;\r\n};\r\n\r\nexport default usePasswordStrength;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__e0GAa\",\"input\":\"RegisterForm_input__wc4ta\",\"inputs\":\"RegisterForm_inputs__pZL-a\",\"inputWrapper\":\"RegisterForm_inputWrapper__8Uflq\",\"inputError\":\"RegisterForm_inputError__67wq2\",\"inputIcon\":\"RegisterForm_inputIcon__Ly13z\",\"eyeIcon\":\"RegisterForm_eyeIcon__pHDoP\",\"error\":\"RegisterForm_error__w5htO\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__DDqiW\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__RVcID\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__J7m7V\"};","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../../redux/auth/operationsAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport { toast } from \"react-toastify\";\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateRegister from \"../../hooks/validateRegister\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\r\nimport styles from \"./RegisterForm.module.css\";\r\n\r\nfunction RegisterForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n    validateRegister\r\n  );\r\n\r\n  const { touched, handleBlur } = useFormTouched();\r\n  const passwordStrength = usePasswordStrength(fields.password);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const [confirmType, setConfirmType] = useState(\"password\");\r\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\r\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\r\n    useToggle(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\r\n\r\n    dispatch(register(fieldsWithoutPasswordConfirm))\r\n      .unwrap()\r\n      .then(() => {\r\n        setFields({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        });\r\n        toast.success(\"Registration successful!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\"Account with this email already exists.\");\r\n        toast.error(\"Account with this email already exists.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <div className={styles.inputs}>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faUser} className={styles.inputIcon} />\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={\"text\"}\r\n              value={fields.username}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, username: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"username\")}\r\n              placeholder=\"Name\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.username && !fields.username && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type=\"email\"\r\n              value={fields.email}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, email: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"email\")}\r\n              placeholder=\"E-mail\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.email && !fields.email && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\r\n\r\n            {eyeVisible && (\r\n              <VscEye\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"text\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            {closedEyeVisible && (\r\n              <VscEyeClosed\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"password\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={type}\r\n              value={fields.password}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, password: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"password\")}\r\n              placeholder=\"Password\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.password && !fields.password && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\r\n\r\n            {confirmEyeVisible && (\r\n              <VscEye\r\n                onClick={() => {\r\n                  toggleConfirmEyeVisible();\r\n                  toggleConfirmClosedEyeVisible();\r\n                  setConfirmType(\"text\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            {confirmClosedEyeVisible && (\r\n              <VscEyeClosed\r\n                onClick={() => {\r\n                  toggleConfirmEyeVisible();\r\n                  toggleConfirmClosedEyeVisible();\r\n                  setConfirmType(\"password\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={confirmType}\r\n              value={fields.passwordConfirm}\r\n              handleChange={(e) =>\r\n                setFields({ ...fields, passwordConfirm: e.target.value })\r\n              }\r\n              handleBlur={handleBlur(\"passwordConfirm\")}\r\n              placeholder=\"Confirm Password\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.passwordConfirm && !fields.passwordConfirm && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n          {touched.passwordConfirm &&\r\n            fields.password !== fields.passwordConfirm && (\r\n              <p className={styles.inputError}>Passwords must match</p>\r\n            )}\r\n        </div>\r\n        <div className={styles.passwordStrengthBar}>\r\n          <div\r\n            className={styles.passwordStrengthIndicator}\r\n            style={{\r\n              width: `${(passwordStrength / 5) * 100}%`,\r\n              backgroundColor:\r\n                passwordStrength < 3\r\n                  ? \"red\"\r\n                  : passwordStrength < 4\r\n                  ? \"orange\"\r\n                  : \"green\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.buttonsContainer}>\r\n        <Button variant=\"colored\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n        {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n        <Link to=\"/login\" className={styles.navLink}>\r\n          <Button type=\"button\">Log in</Button>\r\n        </Link>{\" \"}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__qRD+y\",\"title\":\"RegisterPage_title__rNUi9\"};","import React from \"react\";\r\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\r\n\r\nimport styles from \"./RegisterPage.module.css\";\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>Register</h2>\r\n      <RegisterForm />\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","min","step","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","touched","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","_jsxs","form","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","_objectWithoutProperties","_excluded","register","unwrap","then","toast","success","catch","err","console","error","inputs","inputWrapper","FontAwesomeIcon","icon","faUser","inputIcon","_objectSpread","target","inputError","faEnvelope","faLock","VscEye","onClick","size","eyeIcon","VscEyeClosed","passwordStrengthBar","passwordStrengthIndicator","concat","backgroundColor","buttonsContainer","Button","Link","to","navLink","RegisterPage","section","title","RegisterForm","arguments","undefined","setTouched","reduce","acc","key","field","prev"],"sourceRoot":""}